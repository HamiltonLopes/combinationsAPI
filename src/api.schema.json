{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Travellog-API's",
    "description": "Travellog-API's",
    "termsOfService": "http://api_url/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/combinations-api/v1",
      "description": "Production server"
    },
    {
      "url": " https://hccombinationsapi.tk/combinations-api/v1",
      "description": "Local server"
    }
  ],
  "paths": {
    "/order-processor": {
      "post": {
        "description": "Process Orders",
        "operationId": "ProcessOrders",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderData"
              }
            }
          },
          "required": true
        },

        "responses": {
          "200": {
            "description": "Enabled Hook Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HookConfig"
                }
              }
            }
          },
          "204": {
            "description": "Update Combinations",
            "content": {}
          },
          "400": {
            "description": "Invalid parameters, User not found, Order not found, Order already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Invalid parameters",
                  "code": "400",
                  "error": 
                    "Bad Request"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Server Error",
                  "code": "500",
                  "error": 
                    "Server Error"
                }
              }
            }
          }

          
        }
      }
    },
    "/combinations-by-id/:productId": {
      "get": {
        "description": "Get Combinations by Id",
        "operationId": "CombinationsById",
        "parameters": [
          {
            "ProductId": {
              "name": "ProductId",
              "in": "path",
              "description": "number id of product",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 55
              }  
            }
          } 
        ],
        "responses": {
          "200": {
            "description": "Get Combinations By Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "20"
                  }
                }  
              }
            }
          },
          "400": {
            "description": "Invalid parameters, User not found, Order not found, Order already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Invalid parameters",
                  "code": "400",
                  "error": 
                    "Bad Request"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Server Error",
                  "code": "500",
                  "error": 
                    "Server Error"
                }
              }
            }
          }

          
        }
      }
    },
    "/store-top-combinations": {
      "get": {
        "description": "Get Top Combinations of Store",
        "operationId": "GetTopCombinationsOfStore",
        "parameters": [
          {
            "top": 3
          }
        ],
        "responses": {
          "200": {
            "description": "TopCombinations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopStore"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Invalid parameters",
                  "code": "400",
                  "error": 
                    "Bad Request"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Server Error",
                  "code": "500",
                  "error": 
                    "Server Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "State": {
        "type": "string",
        "example": ["order-completed", "handling", "ready-for-handling", "waiting-ffmt-authorization", "cancel"]
      },
      "HookConfig": {
        "type": "string",
        "example": "ping"
      },
      "OrderId": {
        "type": "string",
        "example": "1247000612275-01"
      },
      "top": {
        "type": "number",
        "example": 2
      },
      "TopCombinations": {
        "type": "object",
        "example": {
          "4": 4,
          "7": 7
        }
      },
      "number": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TopCombinations"
        }
      },
      "CombinationsById": {
        "type": "array",
        "example": [35, 20, 93]
      },
      "OrderData": {
        "type": "object",
        "properties": {
          "State": {
            "$ref": "#/components/schemas/State"
          },
          "OrderId": {
            "$ref": "#/components/schemas/OrderId"
          },
          "HookConfig": {
            "$ref": "#/components/schemas/HookConfig",
            "required": false
          }
        }  
      },
      "TopStore": {
        "type": "object",
        "properties": {
          "1": {
            "$ref": "#/components/schemas/1"
          },
          "2": {
            "$ref": "#/components/schemas/2"
          },
          "3": {
            "$ref": "#/components/schemas/3"
          },
          "qty": {
            "type": "object",
            "top1": {
              "type": "number",
              "example": 10
            },
            "top2": {
              "type": "number",
              "example": 9 
            },
            "top3": {
              "type": "number",
              "example": 8 
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}